get:
  tags: [ "project" ]
  summary: Get all project members
  description: Get all project members
  operationId: getProjectMembers
  parameters: 
    - name: id
      in: path
      schema: 
        type: string
      description: Numeric id of the project
  responses: 
    200:
      description: Get all project members
      content: 
        application/json:
          schema:
            type: object
            properties:
              rows:
                type: array
                items:
                  type: string
              rowCount: 
                type: number
            required: ["rows", "rowCount"]
    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/error.yaml
post: 
  tags: ["project"]
  summary: Create a new project member
  description: Create a new project member
  operationId: createProjectMember
  parameters: 
    - name: id 
      in: path
      schema: 
        type: string
      description: Numeric id of the project
  requestBody: 
    description: Fields used for creating a new project member
    content:
      application/json:
        schema: 
          type: object
          properties:
            userId:
              type: string
            role:
              type: string
          required: [ "userId", "role" ]
  responses: 
    201:
      description: Member created successfully
    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/error.yaml