get:
  tags: [ "project" ]
  summary: Get all projects
  description: Get all the projects created by a user or associated with them
  operationId: getProjectList
  parameters: 
    - name: page
      in: query
      schema: 
        type: string
        default: 0
    - name: pageSize
      in: query
      schema: 
        type: string
        default: 10
    - name: sortBy
      in: query
      schema: 
        type: string
        default: "created_at"
    - name: sortOrder
      in: query
      schema: 
        type: string
        default: "asc"
  responses: 
    200:
      description: All the projects created by a user or associated with them
      content:
        application/json:
          schema: 
            type: object
            properties:
              rows:
                type: array
                items: 
                  type: object
                  properties:
                    id: 
                      type: string
                    name: 
                      $ref: ../../components/schemas/name.yaml
                    description:
                      $ref: ../../components/schemas/description.yaml
                    status:
                      $ref: ../../components/schemas/status.yaml
                    ownerUserId:
                      type: string
                    workspaceId:
                      type: string
                    startDate:
                      $ref: ../../components/schemas/date.yaml
                    endDate:
                      $ref: ../../components/schemas/date.yaml
              rowCount:
                type: number
    400:
      description: Bad request
post:
  tags: [ "project" ]
  summary: Create a new project
  description: Create a new project
  operationId: createProject
  requestBody: 
    description: Fields used for creating a new project
    content: 
      application/json:
        schema: 
          type: object
          properties:
            name:
              $ref: ../../components/schemas/name.yaml
            description:
              $ref: ../../components/schemas/description.yaml
            startDate:
              $ref: ../../components/schemas/date.yaml
            endDate:
              $ref: ../../components/schemas/date.yaml
            status:
              $ref: ../../components/schemas/status.yaml
          required: ["name", "status"]
  responses: 
    201:
      description: Project created successfully
      content:
        application/json:
          schema: 
            type: object
            properties:
              rows:
                type: string
            required: ["rows"]
    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/error.yaml
