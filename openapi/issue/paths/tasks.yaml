get:
  tags: ["issue"]
  parameters: 
    - name: id 
      in: path
      schema: 
        type: string
  summary: Gets all tasks in an issue
  description: Gets all tasks in an issue
  operationId: getIssueTaskList
  responses:
    200:
      description: Issue task created successfully
      content:
        application/json:
          schema: 
            type: object
            properties:
              rows:
                type: array
              rowCount:
                type: number
            required: [ "rows", "rowCount" ] 
    400:
      description: Bad request
      content: 
        application/json:
          schema: 
            $ref: ../../components/schemas/error.yaml
post:
  tags: ["issue"]
  parameters: 
    - name: id 
      in: path
      schema: 
        type: string
  summary: Create a new issue task
  description: Create a new issue task
  operationId: createIssueTask
  requestBody: 
    content:
      application/json:
        schema: 
          type: object
          properties: 
            description:
              $ref: ../../components/schemas/description.yaml
            completed:
              type: boolean
              default: false
            dueDate:
              $ref: ../../components/schemas/date.yaml
          required: [ "description" ] 
  responses:
    201:
      description: Issue task created successfully
    400:
      description: Bad request
      content: 
        application/json:
          schema: 
            $ref: ../../components/schemas/error.yaml
